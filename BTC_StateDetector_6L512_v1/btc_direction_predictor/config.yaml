# Bitcoin Direction Predictor Configuration

cortex:
  base_url: "http://10.1.20.60:9009"  # Cortex endpoint (has 2 years of data)
  read_api: "/prometheus/api/v1/query_range"
  symbol: "BTCUSDT"
  headers: {}

data:
  start: "2025-07-17T00:00:00Z"  # Last 3 MONTHS of data from Cortex (max feasible)
  end: "2025-10-17T00:00:00Z"
  step: "15m"  # 15-minute bars
  
  # Metric families to fetch (will auto-discover all variants)
  include_prefixes:
    - 'crypto_last_price'
    - 'job:crypto_last_price:avg'
    - 'job:crypto_last_price:deriv'
    - 'job:crypto_last_price:composite_indicator'

labels:
  horizons: ["15m", "1h", "4h", "24h"]  # Prediction horizons
  threshold_pct: 0.0  # Threshold for UP label (0.0 = any positive return)
  # Optional: set to 0.1 for Â±0.1% no-trade zone (3-class)

features:
  # Lags to create from raw features
  price_lags: [1, 3, 6, 12]  # steps
  deriv_lags: [1, 3, 6]
  
  # Rolling window sizes for stats
  rolling_windows: [12, 24, 72]  # steps
  
  # Feature selection
  correlation_threshold: 0.95  # Drop one of any pair above this
  max_features_permutation: 30  # Keep top N after permutation importance
  max_features_shap: 12  # Keep top N after SHAP
  forward_selection_candidates: [4, 6, 8, 10, 12]  # Try these feature counts

modeling:
  # Cross-validation
  n_splits: 5  # TimeSeriesSplit folds
  test_size_ratio: 0.2  # Reserve last 20% for final test
  
  # Hyperparameter search
  random_search_iters: 20  # Reduced for faster training on large dataset
  cv_metric: "mcc"  # Matthews Correlation Coefficient
  
  # Model-specific
  lightgbm:
    max_depth: [3, 5, 7]
    num_leaves: [15, 31, 63]
    learning_rate: [0.01, 0.05, 0.1]
    n_estimators: [100, 200, 500]
    min_child_samples: [20, 50]
    
  lstm:
    lookback_steps: 64  # Sequence length
    hidden_size: [32, 64]
    num_layers: [1, 2]
    dropout: [0.2, 0.3]
    batch_size: 128
    epochs: 20
    patience: 5

backtest:
  prob_threshold: 0.55  # Go long if P(up) >= this
  fee_bps: 5  # Trading fee in basis points
  slippage_bps: 5  # Slippage in basis points
  initial_capital: 10000  # For backtest

inference:
  model_type: "lightgbm"  # Which model to use for live inference
  output_dir: "artifacts"
  signal_file: "signal.json"
  # trade_webhook_url: ""  # Optional: POST signals here

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

